version: 2.1
orbs:
  coveralls: coveralls/coveralls@2.2.5
  ruby: circleci/ruby@2.1.0
executors:
  allsearch-executor:
    docker:
      - image: cimg/ruby:3.4.1-browsers
        environment:
          RAILS_ENV: test
          ALLSEARCH_HOST: localhost
          AllSEARCH_USER: postgres
          SOLR_URL: http://solr:SolrRocks@localhost:8983/solr/allsearch-test
          COVERALLS_PARALLEL: true
      - image: cimg/postgres:15.4
        environment:
          POSTGRES_USER: allsearch
          POSTGRES_PASSWORD: allsearch
          POSTGRES_DB: allsearch_test
    working_directory: ~/allsearch_api  
commands:
  setup-bundler:
    steps:
      - run:
          name: Install bundler
          command: gem install bundler -v '2.5.23'
      # Restore bundle cache
      - restore_cache:
          keys:
          - allsearch-v1-{{ checksum "Gemfile.lock" }}
      # Bundle install dependencies
      - run:
          name: Install dependencies
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs 4 --retry 3
      - save_cache:
          key: allsearch-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle
jobs:
  test_local:
    machine: true
    resource_class: pulibrary/ruby-deploy
    steps:
      - checkout
      - setup-bundler
      - ruby/install-deps
      - run: bundle exec cap staging deploy
  build:
    docker:
      - image: cimg/ruby:3.4
    steps:
      - checkout
      - ruby/install-deps

  checking:
    docker: 
      - image: cimg/ruby:3.4
    steps:
      - checkout
      - ruby/install-deps
      - ruby/rubocop-check:
          format: progress
          label: Inspecting with Rubocop
  reek:
    docker:
      - image: cimg/ruby:3.4
    steps:
      - checkout
      - ruby/install-deps
      - run:
          name: Check code smells with Reek
          command: bundle exec reek app
  test:
    executor: allsearch-executor
    parallelism: 3
    steps:
      - attach_workspace:
          at: '~/allsearch_api'
      - checkout
      - setup-bundler
      - run: ruby --version
      - run: sudo apt install postgresql-client
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: bundle exec rake db:setup
      - ruby/install-deps
      - ruby/rspec-test:
          include: spec/**/*_spec.rb
      - coveralls/upload
  semgrep:
    docker:
        - image: returntocorp/semgrep
    steps:
      - checkout
      - run:
          name: Check code against community-provided and custom semgrep rules
          command: semgrep ci --config auto --config .semgrep.yml
  brakeman:
    executor: allsearch-executor
    steps:
      - attach_workspace:
          at: '~/allsearch_api'
      - checkout
      - setup-bundler
      - run: 
          name: Check code for vulnerabilities
          command: bundle exec brakeman
  vacuum:
    executor: allsearch-executor
    steps:
      - attach_workspace:
          at: '~/allsearch_api'
      - checkout
      - run:
          name: Install vacuum
          command: npm install -g @quobix/vacuum --prefix=$HOME/.local
      - run:
          name: Validate swagger yaml file againt OpenAPI standard
          command: vacuum lint -d swagger/**/*.yaml
  bearer:
    docker:
      - image: cimg/ruby:3.4
    environment:
      # Set to default branch of your repo
      DEFAULT_BRANCH: main
    steps:
      - checkout
      - run: curl -sfL https://raw.githubusercontent.com/Bearer/bearer/main/contrib/install.sh | sh -s -- -b /tmp
      - run: CURRENT_BRANCH=$CIRCLE_BRANCH SHA=$CIRCLE_SHA1 /tmp/bearer scan .
  deploy:
    docker:
      - image: cimg/ruby:3.4
    steps:
      - run:
          name: Deploy to Staging
          command: "curl -k \"https://ansible-tower.princeton.edu/api/v2/job_templates/57/launch/\" --header \"Content-Type: application/json\" --header \"Authorization: Bearer $TOWER_TOKEN\" -d '{\"credential_passwords\":{},\"extra_vars\":{\"repo_name\":\"allsearch_api\"}}'"

workflows:
  build_and_test:
    jobs:
      - test_local
      # - build
      # - checking
      # - reek
      # - brakeman
      # - test:
      #     requires:
      #       - build
      # - deploy:
      #    requires:
      #      - test
      #    filters:
      #      branches:
      #        only:
      #          - main
      # - semgrep
      # - vacuum
      # - bearer
